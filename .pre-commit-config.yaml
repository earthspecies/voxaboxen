repos:

  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v2.5.0  # Use the ref you want to point at
    hooks:
      - id: trailing-whitespace
        types: [file, text]
      - id: end-of-file-fixer
        types: [python]
      - id: requirements-txt-fixer
      - id: mixed-line-ending
        types: [python]
        args: [--fix=no]
      - id: check-added-large-files
        args: [--maxkb=1024]

  - repo: https://github.com/astral-sh/ruff-pre-commit
    # Ruff version.
    rev: v0.11.0
    hooks:
      # Run the linter.
      - id: ruff
        args: [--fix]
      # Run the formatter.
      - id: ruff-format

  - repo: https://github.com/adrienverge/yamllint
    rev: v1.35.1
    hooks:
      - id: yamllint

  - repo: https://github.com/codespell-project/codespell
    rev: v2.3.0
    hooks:
      - id: codespell
        args:
          - "--ignore-words=.dict-allowed.txt"
          # skip jupyter notebook as there isn't a good way to only match inputs
          # at the moment. manually fixing up outputs would be a pain and we
          # cannot always expect to regex them out.
          - "--ignore-regex='base64,.*?=='"
        additional_dependencies:
          - tomli

  # - repo: https://github.com/google/addlicense
  #  rev:  55a521b
  #  hooks:
  #    - id: addlicense
  #      args: ["-c", "Company, Inc", "*.py"]

  - repo: https://github.com/astral-sh/uv-pre-commit
    rev: 0.5.5
    hooks:
      - id: uv-lock
        files: ^(uv\.lock|pyproject\.toml|uv\.toml)$
      - id: uv-export
        # yamllint disable-line rule:line-length
        args: ["--frozen", "--output-file=requirements.txt", "--no-dev", "--no-hashes"]
        files: ^(uv\.lock|pyproject\.toml|uv\.toml)$
      - id: uv-export
        # yamllint disable-line rule:line-length
        args: ["--frozen", "--output-file=requirements-dev.txt", "--only-dev", "--no-hashes"]
        files: ^(uv\.lock|pyproject\.toml|uv\.toml)$
